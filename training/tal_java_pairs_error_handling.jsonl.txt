{"text": "Example 1 and 2 updated to use Log4j for error logging", "<TAL>": "?PAGE \"CHECK POSITIVE – CHECK^POS^P100\"\nPROC CHECK^POS^P100 (num, result);\nBEGIN\n  INT num;\n  INT result;\n  IF num <= 0 THEN\n    CALL LOG^ERR (stop^process, \"Number must be positive\", 1);\n  ELSE\n    result := 1;\nEND;\n\n?PAGE \"FILE ERROR – FILE^ERR^P100\"\nPROC FILE^ERR^P100 (file^num, error^code);\nBEGIN\n  INT file^num;\n  INT error^code;\n  INT err;\n  CALL FILEINFO (file^num, err);\n  IF err <> 0 THEN\n    BEGIN\n      error^code := err;\n      CALL LOG^ERR (stop^process, \"File error\", err);\n    END;\nEND;","<JAVA>": "import org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\n\nclass GuardianInterface {\n    private static final Logger logger = LogManager.getLogger(GuardianInterface.class);\n    public static final int STOP_PROCESS = 2;\n\n    public static void logErr(int severity, String message, int code) {\n        logger.error(\"LOG_ERR (Severity {} Code {}): {}\", severity, code, message);\n        if (severity == STOP_PROCESS) {\n            System.exit(code);\n        }\n    }\n\n    public static int fileInfo(int fileNum) {\n        return 4; // mock error\n    }\n}\n\nclass IntWrapper {\n    public int value;\n    public IntWrapper() { this.value = 0; }\n}\n\npublic class CheckPos {\n    public static void checkPosP100(int num, IntWrapper result) {\n        if (num <= 0) {\n            GuardianInterface.logErr(GuardianInterface.STOP_PROCESS, \"Number must be positive\", 1);\n        } else {\n            result.value = 1;\n        }\n    }\n}\n\npublic class FileErr {\n    public static void fileErrP100(int fileNum, IntWrapper errorCode) {\n        int err = GuardianInterface.fileInfo(fileNum);\n        if (err != 0) {\n            errorCode.value = err;\n            GuardianInterface.logErr(GuardianInterface.STOP_PROCESS, \"File error\", err);\n        }\n    }\n}</JAVA>"x}
